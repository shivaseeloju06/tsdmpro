# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master
  - feature/*

variables:
  GitVersion.SemVer: ''

pool: Expleo

workspace:
  clean: all

strategy:
  matrix:
    node_14_x:
      node_version: 14.x

steps:
  - checkout: self
    clean: true
    persistCredentials: true

  - task: gitversion/setup@0
    displayName: Install GitVersion
    inputs:
      versionSpec: '5.x'

  - task: gitversion/execute@0
    displayName: Determine Version
    inputs:
      useConfigFile: true
      configFilePath: 'GitVersion.yml'

  - script: |
      echo '##vso[task.setvariable variable=buildVersion]$(GitVersion.FullSemVer)'

  - script: |
      git config user.email "tsdm@expleogroup.com"
      git config user.name "TSDM Build"

  - task: SonarQubePrepare@4
    inputs:
      SonarQube: 'SonarQube'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'TSDM_API'
      cliProjectName: 'TSDM_API'
      cliSources: './api'

  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)
    displayName: 'Install Node.js'

  - task: YarnInstaller@3
    inputs:
      versionSpec: '1.x'
      checkLatest: true
    displayName: "Install Yarn"

#  - task: Yarn@3
#    inputs:
#      arguments: 'version --new-version $(buildVersion)'
#    displayName: "Yarn: Set package version"

  - task: Yarn@3
    inputs:
      arguments: 'install'
    displayName: "Yarn: Install package dependencies"

  # - task: Yarn@3
  #   inputs:
  #     arguments: 'run build'
  #   displayName: "Yarn: Build"

  - task: Yarn@3
    inputs:
      arguments: 'run analyse'
    displayName: "SonarQube Scanner"
  
  - task: SonarQubeAnalyze@4
    
  - task: SonarQubePublish@4
    inputs:
      pollingTimeoutSec: '300'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      testResultsFiles: "**/test-results.xml"

  # - task: PublishBuildArtifacts@1
  #   inputs:
  #     pathtoPublish: 'dist'
  #     artifactName: 'tsdm-api'
  #     publishLocation: 'Container' # Options: container, filePath
  #     #targetPath: # Required when publishLocation == FilePath
  #     #parallel: false # Optional
  #     #parallelCount: # Optional
  #   displayName: 'Publish Artifacts'
